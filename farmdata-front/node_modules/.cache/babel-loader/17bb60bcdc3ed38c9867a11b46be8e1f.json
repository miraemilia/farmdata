{"ast":null,"code":"var _jsxFileName = \"/Users/Juhani/Documents/Mira/Solita/farmdata/farmdata-front/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Header from './components/Header';\nimport Togglable from './components/Togglable';\nimport AddData from './components/AddData';\nimport ViewData from './components/ViewData';\nimport dataService from './services/data';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [data, setData] = useState([]);\n  const [farms, setFarms] = useState([]);\n  useEffect(() => {\n    dataService.getAll().then(measurements => {\n      const sortedData = measurements.sort((a, b) => b.date - a.date);\n      setData(sortedData);\n    });\n  }, []);\n  useEffect(() => {\n    dataService.getFarms().then(farms => {\n      setFarms(farms);\n    });\n  }, []);\n\n  const createMeasurement = measurement => {\n    console.log(measurement);\n    dataService.postMeasurement(measurement).then(response => {\n      console.log(response.data);\n      const newData = { ...response.data,\n        farm: {\n          id: response.data.farm,\n          name: measurement.farm\n        }\n      };\n      console.log(newData);\n      setData(data.concat(newData));\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Togglable, {\n      openButtonLabel: \"Add data\",\n      closeButtonLabel: \"Hide form\",\n      children: /*#__PURE__*/_jsxDEV(AddData, {\n        farms: farms,\n        createMeasurement: createMeasurement\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Togglable, {\n      openButtonLabel: \"View data\",\n      closeButtonLabel: \"Hide data\",\n      children: /*#__PURE__*/_jsxDEV(ViewData, {\n        data: data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"GavEsLimrzY/pYa4N/RNXHDq5Uo=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/Juhani/Documents/Mira/Solita/farmdata/farmdata-front/src/App.js"],"names":["React","useState","useEffect","Header","Togglable","AddData","ViewData","dataService","App","data","setData","farms","setFarms","getAll","then","measurements","sortedData","sort","a","b","date","getFarms","createMeasurement","measurement","console","log","postMeasurement","response","newData","farm","id","name","concat"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AAEA,OAAOC,WAAP,MAAwB,iBAAxB;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAEhB,QAAM,CAAEC,IAAF,EAAQC,OAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAAEU,KAAF,EAASC,QAAT,IAAsBX,QAAQ,CAAC,EAAD,CAApC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,WAAW,CAACM,MAAZ,GAAqBC,IAArB,CAA0BC,YAAY,IAAI;AACxC,YAAMC,UAAU,GAAGD,YAAY,CAACE,IAAb,CAAkB,CAACC,CAAD,EAAIC,CAAJ,KAAUA,CAAC,CAACC,IAAF,GAASF,CAAC,CAACE,IAAvC,CAAnB;AACAV,MAAAA,OAAO,CAACM,UAAD,CAAP;AACD,KAHD;AAID,GALQ,EAKN,EALM,CAAT;AAOAd,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,WAAW,CAACc,QAAZ,GAAuBP,IAAvB,CAA4BH,KAAK,IAAI;AACnCC,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACD,KAFD;AAGD,GAJQ,EAIN,EAJM,CAAT;;AAMA,QAAMW,iBAAiB,GAAIC,WAAD,IAAiB;AACzCC,IAAAA,OAAO,CAACC,GAAR,CAAYF,WAAZ;AACAhB,IAAAA,WAAW,CACRmB,eADH,CACmBH,WADnB,EAEGT,IAFH,CAEQa,QAAQ,IAAI;AAChBH,MAAAA,OAAO,CAACC,GAAR,CAAYE,QAAQ,CAAClB,IAArB;AACA,YAAMmB,OAAO,GAAG,EACd,GAAGD,QAAQ,CAAClB,IADE;AAEdoB,QAAAA,IAAI,EAAE;AAAEC,UAAAA,EAAE,EAAEH,QAAQ,CAAClB,IAAT,CAAcoB,IAApB;AAA0BE,UAAAA,IAAI,EAAER,WAAW,CAACM;AAA5C;AAFQ,OAAhB;AAIAL,MAAAA,OAAO,CAACC,GAAR,CAAYG,OAAZ;AACAlB,MAAAA,OAAO,CAACD,IAAI,CAACuB,MAAL,CAAYJ,OAAZ,CAAD,CAAP;AACD,KAVH;AAWD,GAbD;;AAeA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,SAAD;AAAW,MAAA,eAAe,EAAC,UAA3B;AAAsC,MAAA,gBAAgB,EAAC,WAAvD;AAAA,6BACE,QAAC,OAAD;AAAS,QAAA,KAAK,EAAEjB,KAAhB;AAAuB,QAAA,iBAAiB,EAAEW;AAA1C;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF,eAKE;AAAA;AAAA;AAAA;AAAA,YALF,eAME,QAAC,SAAD;AAAW,MAAA,eAAe,EAAC,WAA3B;AAAuC,MAAA,gBAAgB,EAAC,WAAxD;AAAA,6BACE,QAAC,QAAD;AAAU,QAAA,IAAI,EAAEb;AAAhB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YANF,eASE;AAAA;AAAA;AAAA;AAAA,YATF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CA/CD;;GAAMD,G;;KAAAA,G;AAiDN,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\n\nimport Header from './components/Header'\nimport Togglable from './components/Togglable'\nimport AddData from './components/AddData'\nimport ViewData from './components/ViewData'\n\nimport dataService from './services/data'\n\nconst App = () => {\n\n  const [ data, setData ] = useState([])\n  const [ farms, setFarms ] = useState([])\n\n  useEffect(() => {\n    dataService.getAll().then(measurements => {\n      const sortedData = measurements.sort((a, b) => b.date - a.date)\n      setData(sortedData)\n    })\n  }, [])\n\n  useEffect(() => {\n    dataService.getFarms().then(farms => {\n      setFarms(farms)\n    })\n  }, [])\n\n  const createMeasurement = (measurement) => {\n    console.log(measurement)\n    dataService\n      .postMeasurement(measurement)\n      .then(response => {\n        console.log(response.data)\n        const newData = {\n          ...response.data,\n          farm: { id: response.data.farm, name: measurement.farm }\n        }\n        console.log(newData)\n        setData(data.concat(newData))\n      })\n  }\n\n  return (\n    <div className=\"container\">\n      <Header/>\n      <Togglable openButtonLabel='Add data' closeButtonLabel='Hide form'>\n        <AddData farms={farms} createMeasurement={createMeasurement}/>\n      </Togglable>\n      <br />\n      <Togglable openButtonLabel='View data' closeButtonLabel='Hide data'>\n        <ViewData data={data}/>\n      </Togglable>\n      <br />\n    </div>\n\n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}