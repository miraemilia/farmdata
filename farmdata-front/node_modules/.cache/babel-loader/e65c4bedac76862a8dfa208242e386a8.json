{"ast":null,"code":"var _jsxFileName = \"/Users/Juhani/Documents/Mira/Solita/farmdata/farmdata-front/src/components/AddData.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddData = _ref => {\n  _s();\n\n  let {\n    farms,\n    createMeasurement\n  } = _ref;\n  const [selectedFarm, setSelectedFarm] = useState('');\n  const [selectedType, setSelectedType] = useState('');\n  const [newValue, setValue] = useState(0);\n\n  const handleFarmChange = event => {\n    setSelectedFarm(event.target.value);\n  };\n\n  const handleTypeChange = event => {\n    setSelectedType(event.target.value);\n  };\n\n  const handleValueChange = event => {\n    setValue(event.target.value);\n  };\n\n  const addMeasurement = event => {\n    event.preventDefault();\n    console.log('add measurement');\n    createMeasurement({\n      farm: selectedFarm,\n      type: selectedType,\n      value: newValue\n    });\n    setSelectedFarm('');\n    setSelectedType('');\n    setValue(0);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: addMeasurement,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Farm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n          value: selectedFarm,\n          onChange: handleFarmChange,\n          children: farms.map(farm => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: farm.name,\n            children: farm.name\n          }, farm.name, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Metric type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n          value: selectedType,\n          onChange: handleTypeChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"pH\",\n            children: \"pH\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"rainFall\",\n            children: \"Rainfall\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"temperature\",\n            children: \"Temperature\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Metric value\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          required: true,\n          type: \"number\",\n          value: newValue,\n          onChange: handleValueChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddData, \"6eMucY+29E/4Fx25aoKl516PWYE=\");\n\n_c = AddData;\nexport default AddData;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddData\");","map":{"version":3,"sources":["/Users/Juhani/Documents/Mira/Solita/farmdata/farmdata-front/src/components/AddData.js"],"names":["React","useState","Form","Button","AddData","farms","createMeasurement","selectedFarm","setSelectedFarm","selectedType","setSelectedType","newValue","setValue","handleFarmChange","event","target","value","handleTypeChange","handleValueChange","addMeasurement","preventDefault","console","log","farm","type","map","name"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\n\nimport { Form, Button } from 'react-bootstrap'\n\nconst AddData = ({ farms, createMeasurement }) => {\n\n  const [selectedFarm, setSelectedFarm] = useState('')\n  const [selectedType, setSelectedType] = useState('')\n  const [newValue, setValue] = useState(0)\n\n  const handleFarmChange = (event) => {\n    setSelectedFarm(event.target.value)\n  }\n\n  const handleTypeChange = (event) => {\n    setSelectedType(event.target.value)\n  }\n\n  const handleValueChange = (event) => {\n    setValue(event.target.value)\n  }\n\n  const addMeasurement = (event) => {\n    event.preventDefault()\n    console.log('add measurement')\n    createMeasurement({\n      farm: selectedFarm,\n      type: selectedType,\n      value: newValue\n    })\n    setSelectedFarm('')\n    setSelectedType('')\n    setValue(0)\n  }\n\n  return (\n    <div>\n      <Form onSubmit={addMeasurement}>\n        <Form.Group>\n          <Form.Label>Farm</Form.Label>\n          <Form.Select value={selectedFarm} onChange={handleFarmChange}>\n            {farms.map(farm =>\n              <option key={farm.name} value={farm.name}>{farm.name}</option>\n            )}\n          </Form.Select>\n        </Form.Group>\n        <Form.Group>\n          <Form.Label>Metric type</Form.Label>\n          <Form.Select value={selectedType} onChange={handleTypeChange}>\n            <option value=\"pH\">pH</option>\n            <option value=\"rainFall\">Rainfall</option>\n            <option value=\"temperature\">Temperature</option>\n          </Form.Select>\n        </Form.Group>\n        <Form.Group>\n          <Form.Label>Metric value</Form.Label>\n          <Form.Control\n            required\n            type=\"number\"\n            value={newValue}\n            onChange={handleValueChange}\n          />\n        </Form.Group>\n        <br />\n        <Button type=\"submit\">Submit</Button>\n      </Form>\n    </div>\n  )\n\n}\n\nexport default AddData"]},"metadata":{},"sourceType":"module"}