{"ast":null,"code":"var _jsxFileName = \"/Users/Juhani/Documents/Mira/Solita/farmdata/farmdata-front/src/components/AddData.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddData = _ref => {\n  _s();\n\n  let {\n    farms,\n    createMeasurement\n  } = _ref;\n  const [selectedFarm, setSelectedFarm] = useState('');\n  const [selectedDate, setSelectedDate] = useState('');\n  const [selectedType, setSelectedType] = useState('');\n  const [newValue, setValue] = useState(0);\n\n  const handleFarmChange = event => {\n    setSelectedFarm(event.target.value);\n  };\n\n  const handleDateChange = event => {\n    setSelectedDate(event.target.value);\n  };\n\n  const handleTypeChange = event => {\n    setSelectedType(event.target.value);\n  };\n\n  const handleValueChange = event => {\n    setValue(event.target.value);\n  };\n\n  const addMeasurement = () => {\n    //event.preventDefault()\n    createMeasurement({\n      farm: selectedFarm,\n      date: selectedDate,\n      type: selectedType,\n      value: newValue\n    });\n    setSelectedFarm('');\n    setSelectedDate('');\n    setSelectedType('');\n    setValue(0);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      id: \"addDataForm\",\n      onSubmit: addMeasurement,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Farm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n          id: \"selectFarm\",\n          required: true,\n          value: selectedFarm,\n          onChange: handleFarmChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            disabled: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this), farms.map(farm => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: farm.name,\n            children: farm.name\n          }, farm.name, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          id: \"selectDate\",\n          required: true,\n          type: \"date\",\n          value: selectedDate,\n          onChange: handleDateChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Metric type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n          id: \"selectType\",\n          required: true,\n          value: selectedType,\n          onChange: handleTypeChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            disabled: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"pH\",\n            children: \"pH\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"rainFall\",\n            children: \"Rainfall\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"temperature\",\n            children: \"Temperature\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Metric value\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          id: \"metricValue\",\n          required: true,\n          type: \"number\",\n          value: newValue,\n          onChange: handleValueChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        id: \"submit-button\",\n        variant: \"outline-primary\",\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddData, \"IiKJo8c3OKics6uj9Ho0ZmZKCwA=\");\n\n_c = AddData;\nexport default AddData;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddData\");","map":{"version":3,"sources":["/Users/Juhani/Documents/Mira/Solita/farmdata/farmdata-front/src/components/AddData.js"],"names":["React","useState","Form","Button","AddData","farms","createMeasurement","selectedFarm","setSelectedFarm","selectedDate","setSelectedDate","selectedType","setSelectedType","newValue","setValue","handleFarmChange","event","target","value","handleDateChange","handleTypeChange","handleValueChange","addMeasurement","farm","date","type","map","name"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\n\nimport { Form, Button } from 'react-bootstrap'\n\nconst AddData = ({ farms, createMeasurement }) => {\n\n  const [selectedFarm, setSelectedFarm] = useState('')\n  const [selectedDate, setSelectedDate] = useState('')\n  const [selectedType, setSelectedType] = useState('')\n  const [newValue, setValue] = useState(0)\n\n  const handleFarmChange = (event) => {\n    setSelectedFarm(event.target.value)\n  }\n\n  const handleDateChange = (event) => {\n    setSelectedDate(event.target.value)\n  }\n\n  const handleTypeChange = (event) => {\n    setSelectedType(event.target.value)\n  }\n\n  const handleValueChange = (event) => {\n    setValue(event.target.value)\n  }\n\n  const addMeasurement = () => {\n    //event.preventDefault()\n    createMeasurement({\n      farm: selectedFarm,\n      date: selectedDate,\n      type: selectedType,\n      value: newValue\n    })\n    setSelectedFarm('')\n    setSelectedDate('')\n    setSelectedType('')\n    setValue(0)\n  }\n\n  return (\n    <div>\n      <Form id='addDataForm' onSubmit={addMeasurement}>\n\n        <Form.Group>\n          <Form.Label>Farm</Form.Label>\n          <Form.Select id='selectFarm' required value={selectedFarm} onChange={handleFarmChange}>\n            <option disabled />\n            {farms.map(farm =>\n              <option key={farm.name} value={farm.name}>{farm.name}</option>\n            )}\n          </Form.Select>\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label>Date</Form.Label>\n          <Form.Control id='selectDate' required type='date' value={selectedDate} onChange={handleDateChange} />\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label>Metric type</Form.Label>\n          <Form.Select id='selectType' required value={selectedType} onChange={handleTypeChange}>\n            <option disabled />\n            <option value=\"pH\">pH</option>\n            <option value=\"rainFall\">Rainfall</option>\n            <option value=\"temperature\">Temperature</option>\n          </Form.Select>\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label>Metric value</Form.Label>\n          <Form.Control\n            id='metricValue'\n            required\n            type=\"number\"\n            value={newValue}\n            onChange={handleValueChange}\n          />\n        </Form.Group>\n\n        <br />\n        <Button id=\"submit-button\" variant=\"outline-primary\" type=\"submit\">Submit</Button>\n\n      </Form>\n    </div>\n  )\n\n}\n\nexport default AddData"]},"metadata":{},"sourceType":"module"}