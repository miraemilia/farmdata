{"ast":null,"code":"import axios from 'axios';\nconst baseUrlM = '/api/measurements';\nconst baseUrlF = '/api/farms'; //const getAll = () => {\n//  const request = axios.get(baseUrlM)\n//  return request.then(response => response.data)\n//}\n\nconst getMonthlyFarmData = (farmId, monthYear) => {\n  const month = String(Number(monthYear.substr(5, 2)) - 1);\n  const year = monthYear.substr(0, 4);\n  console.log('params: ' + month + ' ' + year);\n  const url = baseUrlM + '/' + farmId + '/' + year + '/' + month;\n  const request = axios.get(url);\n  return request.then(response => response.data);\n};\n\nconst postMeasurement = newMeasurement => {\n  console.log('post called');\n  return axios.post(baseUrlM, newMeasurement);\n};\n\nconst getFarms = () => {\n  const request = axios.get(baseUrlF);\n  return request.then(response => response.data);\n};\n\nconst resetMeasurements = () => {\n  const request = axios.post(baseUrlM + '/reset');\n  return request.then(response => response.data);\n};\n\nconst fetchData = () => {\n  const request = axios.post(baseUrlM + '/fetch');\n  return request.then(response => response.data);\n};\n\nexport default {\n  getMonthlyFarmData,\n  getFarms,\n  postMeasurement,\n  resetMeasurements,\n  fetchData\n};","map":{"version":3,"sources":["/Users/Juhani/Documents/Mira/Solita/farmdata/farmdata-front/src/services/data.js"],"names":["axios","baseUrlM","baseUrlF","getMonthlyFarmData","farmId","monthYear","month","String","Number","substr","year","console","log","url","request","get","then","response","data","postMeasurement","newMeasurement","post","getFarms","resetMeasurements","fetchData"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,MAAMC,QAAQ,GAAG,mBAAjB;AACA,MAAMC,QAAQ,GAAG,YAAjB,C,CAEA;AACA;AACA;AACA;;AAEA,MAAMC,kBAAkB,GAAG,CAACC,MAAD,EAASC,SAAT,KAAuB;AAChD,QAAMC,KAAK,GAAGC,MAAM,CAACC,MAAM,CAACH,SAAS,CAACI,MAAV,CAAiB,CAAjB,EAAmB,CAAnB,CAAD,CAAN,GAA8B,CAA/B,CAApB;AACA,QAAMC,IAAI,GAAGL,SAAS,CAACI,MAAV,CAAiB,CAAjB,EAAmB,CAAnB,CAAb;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAaN,KAAb,GAAqB,GAArB,GAA2BI,IAAvC;AACA,QAAMG,GAAG,GAAGZ,QAAQ,GAAC,GAAT,GAAaG,MAAb,GAAoB,GAApB,GAAwBM,IAAxB,GAA6B,GAA7B,GAAiCJ,KAA7C;AACA,QAAMQ,OAAO,GAAGd,KAAK,CAACe,GAAN,CAAUF,GAAV,CAAhB;AACA,SAAOC,OAAO,CAACE,IAAR,CAAaC,QAAQ,IAAIA,QAAQ,CAACC,IAAlC,CAAP;AACD,CAPD;;AASA,MAAMC,eAAe,GAAGC,cAAc,IAAI;AACxCT,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACA,SAAOZ,KAAK,CAACqB,IAAN,CAAWpB,QAAX,EAAqBmB,cAArB,CAAP;AACD,CAHD;;AAKA,MAAME,QAAQ,GAAG,MAAM;AACrB,QAAMR,OAAO,GAAGd,KAAK,CAACe,GAAN,CAAUb,QAAV,CAAhB;AACA,SAAOY,OAAO,CAACE,IAAR,CAAaC,QAAQ,IAAIA,QAAQ,CAACC,IAAlC,CAAP;AACD,CAHD;;AAKA,MAAMK,iBAAiB,GAAG,MAAM;AAC9B,QAAMT,OAAO,GAAGd,KAAK,CAACqB,IAAN,CAAWpB,QAAQ,GAAG,QAAtB,CAAhB;AACA,SAAOa,OAAO,CAACE,IAAR,CAAaC,QAAQ,IAAIA,QAAQ,CAACC,IAAlC,CAAP;AACD,CAHD;;AAKA,MAAMM,SAAS,GAAG,MAAM;AACtB,QAAMV,OAAO,GAAGd,KAAK,CAACqB,IAAN,CAAWpB,QAAQ,GAAG,QAAtB,CAAhB;AACA,SAAOa,OAAO,CAACE,IAAR,CAAaC,QAAQ,IAAIA,QAAQ,CAACC,IAAlC,CAAP;AACD,CAHD;;AAKA,eAAe;AAAEf,EAAAA,kBAAF;AAAsBmB,EAAAA,QAAtB;AAAgCH,EAAAA,eAAhC;AAAiDI,EAAAA,iBAAjD;AAAoEC,EAAAA;AAApE,CAAf","sourcesContent":["import axios from 'axios'\nconst baseUrlM = '/api/measurements'\nconst baseUrlF = '/api/farms'\n\n//const getAll = () => {\n//  const request = axios.get(baseUrlM)\n//  return request.then(response => response.data)\n//}\n\nconst getMonthlyFarmData = (farmId, monthYear) => {\n  const month = String(Number(monthYear.substr(5,2))-1)\n  const year = monthYear.substr(0,4)\n  console.log('params: ' + month + ' ' + year)\n  const url = baseUrlM+'/'+farmId+'/'+year+'/'+month\n  const request = axios.get(url)\n  return request.then(response => response.data)\n}\n\nconst postMeasurement = newMeasurement => {\n  console.log('post called')\n  return axios.post(baseUrlM, newMeasurement)\n}\n\nconst getFarms = () => {\n  const request = axios.get(baseUrlF)\n  return request.then(response => response.data)\n}\n\nconst resetMeasurements = () => {\n  const request = axios.post(baseUrlM + '/reset')\n  return request.then(response => response.data)\n}\n\nconst fetchData = () => {\n  const request = axios.post(baseUrlM + '/fetch')\n  return request.then(response => response.data)\n}\n\nexport default { getMonthlyFarmData, getFarms, postMeasurement, resetMeasurements, fetchData }"]},"metadata":{},"sourceType":"module"}