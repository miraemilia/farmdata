{"ast":null,"code":"var _jsxFileName = \"/Users/Juhani/Documents/Mira/Solita/farmdata/farmdata-front/src/components/Togglable.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Button } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Togglable = props => {\n  _s();\n\n  const [visible, setVisible] = useState(false);\n  const hideWhenVisible = {\n    display: visible ? 'none' : ''\n  };\n  const showWhenVisible = {\n    display: visible ? '' : 'none'\n  };\n\n  const toggleVisibility = () => {\n    setVisible(!visible);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: hideWhenVisible,\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        id: props.openButtonId,\n        variant: \"outline-primary\",\n        onClick: toggleVisibility,\n        children: props.openButtonLabel\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: showWhenVisible,\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        id: props.closeButtonId,\n        variant: \"outline-primary\",\n        onClick: toggleVisibility,\n        children: props.closeButtonLabel\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), props.children]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Togglable, \"nasDZTaFyCSaonwn/saxq4X3Wo4=\");\n\n_c = Togglable;\nTogglable.displayName = 'Togglable';\nexport default Togglable;\n\nvar _c;\n\n$RefreshReg$(_c, \"Togglable\");","map":{"version":3,"sources":["/Users/Juhani/Documents/Mira/Solita/farmdata/farmdata-front/src/components/Togglable.js"],"names":["React","useState","Button","Togglable","props","visible","setVisible","hideWhenVisible","display","showWhenVisible","toggleVisibility","openButtonId","openButtonLabel","closeButtonId","closeButtonLabel","children","displayName"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,SAASC,MAAT,QAAuB,iBAAvB;;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAAA;;AAC3B,QAAM,CAAEC,OAAF,EAAWC,UAAX,IAA0BL,QAAQ,CAAC,KAAD,CAAxC;AAEA,QAAMM,eAAe,GAAG;AAAEC,IAAAA,OAAO,EAAEH,OAAO,GAAG,MAAH,GAAY;AAA9B,GAAxB;AACA,QAAMI,eAAe,GAAG;AAAED,IAAAA,OAAO,EAAEH,OAAO,GAAG,EAAH,GAAQ;AAA1B,GAAxB;;AAEA,QAAMK,gBAAgB,GAAG,MAAM;AAC7BJ,IAAAA,UAAU,CAAC,CAACD,OAAF,CAAV;AACD,GAFD;;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACE;AAAK,MAAA,KAAK,EAAEE,eAAZ;AAAA,6BACE,QAAC,MAAD;AAAQ,QAAA,EAAE,EAAEH,KAAK,CAACO,YAAlB;AAAgC,QAAA,OAAO,EAAC,iBAAxC;AAA0D,QAAA,OAAO,EAAED,gBAAnE;AAAA,kBAAsFN,KAAK,CAACQ;AAA5F;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAK,MAAA,KAAK,EAAEH,eAAZ;AAAA,8BACE,QAAC,MAAD;AAAQ,QAAA,EAAE,EAAEL,KAAK,CAACS,aAAlB;AAAiC,QAAA,OAAO,EAAC,iBAAzC;AAA2D,QAAA,OAAO,EAAEH,gBAApE;AAAA,kBAAuFN,KAAK,CAACU;AAA7F;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA,cAFF,EAGGV,KAAK,CAACW,QAHT;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CAvBD;;GAAMZ,S;;KAAAA,S;AAyBNA,SAAS,CAACa,WAAV,GAAwB,WAAxB;AAEA,eAAeb,SAAf","sourcesContent":["import React, { useState } from 'react'\n\nimport { Button } from 'react-bootstrap'\n\nconst Togglable = (props) => {\n  const [ visible, setVisible ] = useState(false)\n\n  const hideWhenVisible = { display: visible ? 'none' : '' }\n  const showWhenVisible = { display: visible ? '' : 'none' }\n\n  const toggleVisibility = () => {\n    setVisible(!visible)\n  }\n\n  return (\n    <div className=\"container\">\n      <div style={hideWhenVisible}>\n        <Button id={props.openButtonId} variant='outline-primary' onClick={toggleVisibility}>{props.openButtonLabel}</Button>\n      </div>\n      <div style={showWhenVisible}>\n        <Button id={props.closeButtonId} variant='outline-primary' onClick={toggleVisibility}>{props.closeButtonLabel}</Button>\n        <br />\n        {props.children}\n      </div>\n    </div>\n  )\n\n}\n\nTogglable.displayName = 'Togglable'\n\nexport default Togglable"]},"metadata":{},"sourceType":"module"}