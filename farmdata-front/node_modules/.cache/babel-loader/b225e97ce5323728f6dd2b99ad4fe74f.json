{"ast":null,"code":"var _jsxFileName = \"/Users/Juhani/Documents/Mira/Solita/farmdata/farmdata-front/src/components/ViewData.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport DataTable from './DataTable';\nimport { Form } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ViewData = _ref => {\n  _s();\n\n  let {\n    farms,\n    data\n  } = _ref;\n  const [farmFilter, setFarmFilter] = useState('');\n  const [monthFilter, setMonthFilter] = useState(''); //const [ showPH, setShowPH ] = useState(true)\n  //const [ showRainFall, setShowRainFall ] = useState(true)\n  //const [ showTemperature, setShowTemperature ] = useState(true)\n\n  const handleFarmFilter = event => {\n    setFarmFilter(event.target.value);\n  };\n\n  const handleMonthFilter = event => {\n    setMonthFilter(event.target.value);\n  }; //const farmData = data.filter(d => d.farm.name === farmFilter)\n\n\n  const monthlyFarmFilter = d => {\n    const date = new Date(d.date);\n    console.log(date);\n    const monthYear = date.getFullYear() + '-' + date.getMonth() + 1;\n    console.log(monthYear);\n\n    if (monthFilter === '') {\n      return d.farm.name === farmFilter;\n    }\n\n    return d.farm.name === farmFilter && monthYear === monthFilter;\n  };\n\n  const monthlyFarmData = data.filter(d => monthlyFarmFilter(d));\n  const pH = monthlyFarmData.filter(d => d.type === 'pH');\n  const rainFall = monthlyFarmData.filter(d => d.type === 'rainFall');\n  const temperature = monthlyFarmData.filter(d => d.type === 'temperature');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      children: /*#__PURE__*/_jsxDEV(Form.Group, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Set Farm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n          id: \"selectFarmToFilter\",\n          value: farmFilter,\n          onChange: handleFarmFilter,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            disabled: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this), farms.map(farm => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: farm.name,\n            children: farm.name\n          }, farm.name, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      children: /*#__PURE__*/_jsxDEV(Form.Group, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Set month\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          id: \"selectMonthToFilter\",\n          value: monthFilter,\n          type: \"month\",\n          onChange: handleMonthFilter\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"pH\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DataTable, {\n      id: \"pHTable\",\n      filteredData: pH\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Rainfall\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DataTable, {\n      id: \"rainFallTable\",\n      filteredData: rainFall\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Temperature\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DataTable, {\n      id: \"temperatureTable\",\n      filteredData: temperature\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ViewData, \"f9WcjKM4GNHa8Eji5cPvpOq2Bcw=\");\n\n_c = ViewData;\nexport default ViewData;\n\nvar _c;\n\n$RefreshReg$(_c, \"ViewData\");","map":{"version":3,"sources":["/Users/Juhani/Documents/Mira/Solita/farmdata/farmdata-front/src/components/ViewData.js"],"names":["React","useState","DataTable","Form","ViewData","farms","data","farmFilter","setFarmFilter","monthFilter","setMonthFilter","handleFarmFilter","event","target","value","handleMonthFilter","monthlyFarmFilter","d","date","Date","console","log","monthYear","getFullYear","getMonth","farm","name","monthlyFarmData","filter","pH","type","rainFall","temperature","map"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport DataTable from './DataTable'\n\nimport { Form } from 'react-bootstrap'\n\nconst ViewData = ({ farms, data }) => {\n\n  const [ farmFilter, setFarmFilter ] = useState('')\n  const [ monthFilter, setMonthFilter ] = useState('')\n  //const [ showPH, setShowPH ] = useState(true)\n  //const [ showRainFall, setShowRainFall ] = useState(true)\n  //const [ showTemperature, setShowTemperature ] = useState(true)\n\n  const handleFarmFilter = (event) => {\n    setFarmFilter(event.target.value)\n  }\n\n  const handleMonthFilter = (event) => {\n    setMonthFilter(event.target.value)\n  }\n\n  //const farmData = data.filter(d => d.farm.name === farmFilter)\n  const monthlyFarmFilter = (d) => {\n    const date = new Date(d.date)\n    console.log(date)\n    const monthYear = date.getFullYear() + '-' + date.getMonth()+1\n    console.log(monthYear)\n    if (monthFilter === '') {\n      return d.farm.name === farmFilter\n    }\n    return d.farm.name === farmFilter && monthYear === monthFilter\n  }\n  const monthlyFarmData = data.filter(d => monthlyFarmFilter(d))\n  const pH = monthlyFarmData.filter(d => d.type === 'pH')\n  const rainFall = monthlyFarmData.filter(d => d.type === 'rainFall')\n  const temperature = monthlyFarmData.filter(d => d.type === 'temperature')\n\n  return (\n    <div>\n      <br />\n      <Form>\n        <Form.Group>\n          <Form.Label>Set Farm</Form.Label>\n          <Form.Select id='selectFarmToFilter' value={farmFilter} onChange={handleFarmFilter}>\n            <option disabled/>\n            {farms.map(farm =>\n              <option key={farm.name} value={farm.name}>{farm.name}</option>\n            )}\n          </Form.Select>\n        </Form.Group>\n      </Form>\n\n      <Form>\n        <Form.Group>\n          <Form.Label>Set month</Form.Label>\n          <Form.Control id='selectMonthToFilter' value={monthFilter} type='month' onChange={handleMonthFilter}></Form.Control>\n        </Form.Group>\n      </Form>\n\n      <h3>pH</h3>\n      <DataTable id='pHTable' filteredData={pH}/>\n      <h3>Rainfall</h3>\n      <DataTable id='rainFallTable' filteredData={rainFall}/>\n      <h3>Temperature</h3>\n      <DataTable id='temperatureTable' filteredData={temperature}/>\n    </div>\n  )\n\n}\n\nexport default ViewData"]},"metadata":{},"sourceType":"module"}